name: Send Weather Email

on:
  schedule:
    # Cron runs in UTC. 06:10 UTC â‰ˆ 07:10 London during BST; 06:10 London in winter.
    - cron: '10 6 * * *'
  workflow_dispatch: {}

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: Europe/London

      # ---- Required secrets (set these in your repo Settings > Secrets and variables > Actions) ----
      ECOWITT_API_KEY: ${{ secrets.ECOWITT_API_KEY }}
      ECOWITT_APP_KEY: ${{ secrets.ECOWITT_APP_KEY }}
      ECOWITT_MAC: ${{ secrets.ECOWITT_MAC }}
      GMAIL_EMAIL: ${{ secrets.GMAIL_EMAIL }}
      GMAIL_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}   # use a Gmail App Password
      RECEIVER_EMAILS: ${{ secrets.RECEIVER_EMAILS }}     # e.g. "me@example.com,friend@example.com"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'          # enables pip cache keyed by requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # (Optional) Keep your SQLite DB between runs so the windrose has full history
      - name: Restore DB cache
        uses: actions/cache@v4
        with:
          path: weather_data.db
          key: weather-db-v1
          restore-keys: |
            weather-db-

      - name: Show repo contents (debug)
        run: |
          pwd
          ls -la
          echo "---- Python files found ----"
          find . -maxdepth 3 -type f -name "*.py" -print

      - name: Run weather processor
        env:
          SCRIPT_PATH: enhanced_weather_processor.py   # <-- change if your script lives elsewhere
        run: |
          if [ ! -f "$SCRIPT_PATH" ]; then
            echo "ERROR: $SCRIPT_PATH not found. Update SCRIPT_PATH to match your repo."
            exit 1
          fi
          python "$SCRIPT_PATH"

      # (Optional) Save updated DB back to cache (best-effort)
      - name: Save DB snapshot
        if: always()
        uses: actions/cache/save@v4
        with:
          path: weather_data.db
          key: weather-db-v1-${{ github.run_id }}
